<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.bookhub.user.mapper.MyPageMapper">

    <select id="countCoupon" parameterType="string"  resultType="int">
    select count(*)
    from COUPON_PRODUCED cp , USER u
    where cp.USER_NO = u.USER_NO
      and u.USER_ID =  #{value}
      and cp.USED = 'N'
    </select>


  <select id="countOrder" parameterType="string" resultType="int">
      select count(*)
      from BUY b , USER u
      where u.USER_NO = b.USER_NO
      and u.USER_ID = #{id}
      and b.REFUND_YN = 'N'
  </select>
    
  <select id="selectOrderListByIdPaging" resultType="com.example.bookhub.user.dto.OrderListDTO">
   select
        b.BUY_NO                            as no,
        b.FINAL_PRICE                       as finalPrice,
        b.BUY_DATE                          as buyDate,
        status.BUY_STATUS_NAME              as "buyStatus.name",
        u.USER_ID                           as "user.id",
        (select z.BUY_PAY_METHOD_NAME
         from BUY_PAY_METHOD z
         where
            z.BUY_PAY_METHOD_NO = pay.BUY_PAY_METHOD_NO)
                                            as "buyPayMethod.name" , -- 결제 방법
        (select y.BOOK_NAME
         from  BUY_BOOK bb , BOOK y
         where bb.BOOK_NO = y.BOOK_NO
         and b.BUY_NO = bb.BUY_NO
         limit 1)
                                            as "book.name",
        (select count(*)
         from BUY_BOOK x
         where x.BUY_NO = b.BUY_NO)
                                            as cnt
from BUY b , USER u , BUY_STATUS status , BUY_PAY_METHOD pay
      where b.USER_NO = u.USER_NO
        and b.BUY_STATUS_NO = status.BUY_STATUS_NO
        and b.BUY_PAY_METHOD_NO = pay.BUY_PAY_METHOD_NO
        and u.USER_ID = #{id}
        and b.REFUND_YN = 'N'
      ORDER BY
          b.BUY_NO DESC
      LIMIT #{offset} ,10
  </select>
    

  <select id="selectOrderListById" parameterType="string" resultType="com.example.bookhub.product.vo.Buy">
      select
          b.BUY_NO                            as buyNo,
          b.TOTAL_PRICE                       as totalPrice,
          b.FINAL_PRICE                       as finalPrice,
          b.COMMON_ENTRANCE_APPROACH          as commonEntranceApproach,
          b.BUY_DATE                          as buyDate,
          b.BUY_PAY_METHOD_NO                 as buyPayMethod,
          bs.BUY_STATUS_NAME                  as "buyStatus.name",
          u.USER_ID                           as "user.id",
          bdr.BUY_DELIVERY_REQUEST_NO         as "buyDeliveryRequest.buyDeliveryRequestNo",
          (select count(*)
           from BUY_BOOK x
           where x.BUY_NO = b.BUY_NO)            as cnt,
          (select y.BOOK_NAME
           from BUY_BOOK x, BOOK y
           where x.BUY_NO = b.BUY_NO
             and x.BOOK_NO = y.BOOK_NO
            limit 1)                             as "book.name"
      from BUY b , USER u , BUY_STATUS bs , BUY_DELIVERY_REQUEST bdr
      where b.USER_NO = u.USER_NO
        and b.BUY_STATUS_NO = bs.BUY_STATUS_NO
        and b.BUY_DELIVERY_REQUEST_NO = bdr.BUY_DELIVERY_REQUEST_NO
        and u.USER_ID = #{value}
        and b.REFUND_YN = 'N'
      ORDER BY
          b.BUY_NO DESC
          LIMIT 3
  </select>


    <!--  1:1 문의사항 글 갯수 파악하기 -->
    <select id="countInquiry" parameterType="string" resultType="int">
        select count(*)
        from INDIVIDUAL_INQUIRIES i , USER u
        where i.INQUIRY_USER_NO = u.USER_NO
          and u.USER_ID = #{id}
    </select>


    <select id="selectInquiryList" parameterType="string" resultType="com.example.bookhub.board.vo.Inquiry">
        select
            i.INDIVIDUAL_INQUIRY_NO             as no,
            i.INQUIRY_CATEGORY_NO               as "faqCategory.no",
            f.FAQ_CATEGORY_NAME                 as "faqCategory.name",
            i.INQUIRY_USER_NO                   as "user.no",
            u.USER_ID                           as "user.id",
            i.INDIVIDUAL_INQUIRY_TITLE          as title,
            i.INDIVIDUAL_INQUIRY_CONTENT        as content,
            i.INDIVIDUAL_INQUIRY_ANSWER_YN      as answerYn,
            i.INDIVIDUAL_INQUIRY_DELETE_YN      as deleteYn,
            i.INDIVIDUAL_INQUIRY_CREATE_DATE    as createdDate ,
            i.INDIVIDUAL_INQUIRY_UPDATE_DATE    as updatedDate,
            u.USER_NAME                         as "user.name"
        from INDIVIDUAL_INQUIRIES i , USER u , FAQ_CATEGORIES f
        where i.INQUIRY_USER_NO = u.USER_NO
        and i.INQUIRY_CATEGORY_NO = f.FAQ_CATEGORY_NO
        and u.USER_ID = #{id}
        order by  i.INDIVIDUAL_INQUIRY_CREATE_DATE DESC
        Limit 3
    </select>

    <!--페이징 되어있는 1:1문의 내역 조회하기 -->
    <select id="selectInquiryListPaging" resultType="com.example.bookhub.user.dto.InquiryListDTO">
        select
            i.INDIVIDUAL_INQUIRY_NO             as no,
            i.INQUIRY_CATEGORY_NO               as "faqCategory.no",
            f.FAQ_CATEGORY_NAME                 as "faqCategory.name",
            i.INQUIRY_USER_NO                   as "user.no",
            u.USER_ID                           as "user.id",
            i.INDIVIDUAL_INQUIRY_TITLE          as title,
            i.INDIVIDUAL_INQUIRY_CONTENT        as content,
            i.INDIVIDUAL_INQUIRY_ANSWER_YN      as answerYn,
            i.INDIVIDUAL_INQUIRY_DELETE_YN      as deleteYn,
            i.INDIVIDUAL_INQUIRY_CREATE_DATE    as createdDate ,
            i.INDIVIDUAL_INQUIRY_UPDATE_DATE    as updatedDate,
            u.USER_NAME                         as "user.name"
        from INDIVIDUAL_INQUIRIES i , USER u , FAQ_CATEGORIES f
        where i.INQUIRY_USER_NO = u.USER_NO
          and i.INQUIRY_CATEGORY_NO = f.FAQ_CATEGORY_NO
          and u.USER_ID = #{id}
        order by  i.INDIVIDUAL_INQUIRY_CREATE_DATE DESC
            LIMIT #{offset} ,10
    </select>

    <!-- 캐싱 1:1 문의  -->
    <select id="cacheInquiries" resultType="com.example.bookhub.user.dto.InquiryListDTO">
        select
            i.INDIVIDUAL_INQUIRY_NO             as no,
            i.INQUIRY_CATEGORY_NO               as "faqCategory.no",
            f.FAQ_CATEGORY_NAME                 as "faqCategory.name",
            i.INQUIRY_USER_NO                   as "user.no",
            u.USER_ID                           as "user.id",
            i.INDIVIDUAL_INQUIRY_TITLE          as title,
            i.INDIVIDUAL_INQUIRY_CONTENT        as content,
            i.INDIVIDUAL_INQUIRY_ANSWER_YN      as answerYn,
            i.INDIVIDUAL_INQUIRY_DELETE_YN      as deleteYn,
            i.INDIVIDUAL_INQUIRY_CREATE_DATE    as createdDate ,
            i.INDIVIDUAL_INQUIRY_UPDATE_DATE    as updatedDate,
            u.USER_NAME                         as "user.name"
        from INDIVIDUAL_INQUIRIES i , USER u , FAQ_CATEGORIES f
        where i.INQUIRY_USER_NO = u.USER_NO
          and i.INQUIRY_CATEGORY_NO = f.FAQ_CATEGORY_NO
        order by  i.INDIVIDUAL_INQUIRY_CREATE_DATE DESC
            LIMIT #{offset} ,10
    </select>

<!--    노 캐싱 1:1 문의 -->
    <select id="NocacheInquiries" resultType="com.example.bookhub.user.dto.InquiryListDTO">
        select
            i.INDIVIDUAL_INQUIRY_NO             as no,
            i.INQUIRY_CATEGORY_NO               as "faqCategory.no",
            f.FAQ_CATEGORY_NAME                 as "faqCategory.name",
            i.INQUIRY_USER_NO                   as "user.no",
            u.USER_ID                           as "user.id",
            i.INDIVIDUAL_INQUIRY_TITLE          as title,
            i.INDIVIDUAL_INQUIRY_CONTENT        as content,
            i.INDIVIDUAL_INQUIRY_ANSWER_YN      as answerYn,
            i.INDIVIDUAL_INQUIRY_DELETE_YN      as deleteYn,
            i.INDIVIDUAL_INQUIRY_CREATE_DATE    as createdDate ,
            i.INDIVIDUAL_INQUIRY_UPDATE_DATE    as updatedDate,
            u.USER_NAME                         as "user.name"
        from INDIVIDUAL_INQUIRIES i , USER u , FAQ_CATEGORIES f
        where i.INQUIRY_USER_NO = u.USER_NO
          and i.INQUIRY_CATEGORY_NO = f.FAQ_CATEGORY_NO
        order by  i.INDIVIDUAL_INQUIRY_CREATE_DATE DESC
            LIMIT #{offset} ,10
    </select>



    <!-- 회원탈퇴 -->
    <update id="deleteUserById" parameterType="string">
        UPDATE USER
        SET user_del_yn = 'Y'
        WHERE user_id = #{id}
    </update>

    <!-- 비밀번호 변경 -->
    <update id="updatePassword">
        update USER
        set USER_PASSWORD = #{password}
        where user_id =  #{id}
    </update>


    <select id="selectWishListById" resultMap="BookDtoMap">
        select
            w.WISH_LIST_NO                    ,
            w.WISH_LIST_CREATED_DATE         ,
            b.BOOK_NAME                     ,
            i.BOOK_IMAGE_COVER              ,
            a.AUTHOR_NO                     ,
            a.AUTHOR_NAME                   ,
            b.BOOK_NO
        from BOOK b , USER u , USER_WISHLIST w , BOOK_IMAGES i , AUTHOR a , BOOK_AUTHOR ba
        where u.USER_NO = w.USER_NO
        and   b.BOOK_NO = w.BOOK_NO
        and   i.BOOK_NO = b.BOOK_NO
        and   a.AUTHOR_NO = ba.AUTHOR_NO
        and   ba.BOOK_NO = b.BOOK_NO
        and   u.USER_ID = #{userId}
        order by WISH_LIST_CREATED_DATE DESC
        LIMIT #{offset}, 10
    </select>

    <resultMap id="BookDtoMap" type="com.example.bookhub.user.dto.WishListDTO">
        <id column="WISH_LIST_NO" property="wishNo" />
        <result column="book_name" property="name" />
        <result column="book_no" property="bookNo" />
        <result column="book_list_price" property="price" />
        <result column="book_image_cover" property="bookImages"/>
        <collection property="authorList" ofType="com.example.bookhub.product.vo.Author">
            <id column="author_no" property="authorNo" />
            <result column="author_name" property="name" />
        </collection>
    </resultMap>


    <select id="getTotalWishListCount" parameterType="string" resultType="int">
        SELECT COUNT(DISTINCT b.BOOK_NO)
        FROM BOOK b, USER u, USER_WISHLIST w, BOOK_IMAGES i, AUTHOR a, BOOK_AUTHOR ba
        WHERE
            u.USER_NO = w.USER_NO AND
            b.BOOK_NO = w.BOOK_NO AND
            i.BOOK_NO = b.BOOK_NO AND
            a.AUTHOR_NO = ba.AUTHOR_NO AND
            ba.BOOK_NO = b.BOOK_NO AND
            u.USER_ID = #{id}
    </select>


    <delete id="deleteWishListById">
        delete
        from USER_WISH_LIST
        where WISH_LIST_NO = #{wishNo}
          and user_no = (select USER_NO
                         FROM USER
                         where USER_ID = #{id})
    </delete>



    <select id="findInquiryByDate" resultType="com.example.bookhub.board.vo.Inquiry">
        select
            i.INDIVIDUAL_INQUIRY_NO             as no,
            i.INDIVIDUAL_INQUIRY_TITLE          as title,
            i.INDIVIDUAL_INQUIRY_CONTENT        as content,
            i.INDIVIDUAL_INQUIRY_ANSWER_YN      as answerYn,
            i.INDIVIDUAL_INQUIRY_DELETE_YN      as deleteYn,
            i.INDIVIDUAL_INQUIRY_CREATE_DATE    as createdDate ,
            i.INDIVIDUAL_INQUIRY_UPDATE_DATE    as updatedDate,
            u.USER_ID                           as "user.id"
        from INDIVIDUAL_INQUIRIES i , USER u
        where INDIVIDUAL_INQUIRY_CREATE_DATE BETWEEN #{startDate} AND #{endDate}
          and u.USER_ID = #{id}
        order by i.INDIVIDUAL_INQUIRY_CREATE_DATE desc
    </select>

    <select id="selectOrderDetailById" resultType="com.example.bookhub.user.dto.OrderDetailDTO">
        select
            buy.BUY_NO              as no,              -- 주문번호
            book.BOOK_NO            as "book.bookNo",       -- 책 번호
            book.BOOK_NAME          as "book.name",     -- 책 이름
            status.BUY_STATUS_NAME  as "buyStatus.name",   -- 배송 상태 이름
            buy.BUY_DATE            as buyDate,             -- 구매날짜
            book.BOOK_LIST_PRICE    as "book.price",        -- 책의 원가
            buyBook.COUNT           as count,
            book.BOOK_DISCOUNT_RATE as "book.discountRate",
            FLOOR(book.BOOK_LIST_PRICE*book.BOOK_DISCOUNT_RATE)  as discountedPrice, -- 책의 할인금액
            CEIL(book.BOOK_LIST_PRICE - (book.BOOK_LIST_PRICE * book.BOOK_DISCOUNT_RATE) )    as resultPrice, -- 할인적용된 금액
--             buy.FINAL_PRICE         as finalPrice,  -- 최종 가격
            user.USER_ID            as "user.id",
            user.USER_NAME          as "user.name"
        from BUY buy , BOOK book , BUY_BOOK buyBook, BUY_STATUS status  , USER user
        where
            buy.USER_NO = user.USER_NO
          and book.BOOK_NO = buyBook.BOOK_NO
          and buy.BUY_STATUS_NO = status.BUY_STATUS_NO
          and buy.BUY_NO = buyBook.BUY_NO
          and user.USER_ID = #{id}
          and buy.BUY_NO = #{no}
          and buy.REFUND_YN = 'N'
    </select>

    <select id="deliveryDetail" resultType="com.example.bookhub.user.dto.OrderDetailDTO">
        select
            user.USER_NAME          as "user.name",
            user.USER_ID            as "user.id",
            user.USER_TEL           as "user.tel",
            buy.BUY_NO              as no,              -- 주문번호
            buy.BUY_DATE            as buyDate,             -- 구매날짜
            delivery.DELIVERY_NO    as "userDelivery.no",
            delivery.RECIPIENT_NAME as "userDelivery.name",
            delivery.RECIPIENT_TEL  as "userDelivery.tel",
            delivery.USER_ZIP_CODE  as "userDelivery.zipCode",
            delivery.USER_ADDRESS   as "userDelivery.address",
            delivery.USER_ADDRESS_DETAIL as "userDelivery.addressDetail",
            buy.FINAL_PRICE         as "finalPrice"
        from BUY buy , USER user , USER_DELIVERY delivery
        where user.USER_ID = #{id}
        and BUY_NO = #{no}
        and buy.USER_NO = user.USER_NO
        and user.USER_NO = delivery.USER_NO
        and buy.DELIVERY_NO = delivery.DELIVERY_NO
    </select>

    <select id="countInquiriesAll" >
        select count(*)
        from INDIVIDUAL_INQUIRIES
    </select>
</mapper>


